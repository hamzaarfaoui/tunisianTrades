# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    images_categories_cm: '%kernel.root_dir%/../public/uploads/categories/cm'
    images_categories_sc1: '%kernel.root_dir%/../public/uploads/categories/sc1'
    images_categories_sc2: '%kernel.root_dir%/../public/uploads/categories/sc2'
    images_marques: '%kernel.root_dir%/../public/uploads/marques'
    images_products_img: '%kernel.root_dir%/../public/uploads/products/images'
    images_products_img_gallery: '%kernel.root_dir%/../public/uploads/products/gallery'
    images_shop_logo: '%kernel.root_dir%/../public/uploads/shops/logos'
    images_shop_couvertures: '%kernel.root_dir%/../public/uploads/shops/couvertures'
    images_shop_gallery: '%kernel.root_dir%/../public/uploads/shops/gallery'
    images_banners: '%kernel.root_dir%/../public/uploads/banners'
    images_sliders: '%kernel.root_dir%/../public/uploads/sliders'
    images_user: '%kernel.root_dir%/../public/uploads/users'  

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    redirect.after.login:
        class: App\Redirection\AfterLoginRedirection
        arguments: ['@router']
    twig.extension.sortbyfield:
        class: Snilius\Twig\SortByFieldExtension
        tags:
            - { name: twig.extension }    
    redirect.after.login.admin:
        class: App\Redirection\AfterLoginAdminRedirection
        arguments: ['@router']
    app.form.registration:
        class: App\Form\RegistrationFormType
        tags:
            - { name: form.type }    
    app.form.profile:
        class: App\Form\ProfileFormType
        tags:
            - { name: form.type }         
    demo_user.registration_listener:
        class: App\EventListener\RegistrationListener
        arguments: ['@router']
        tags:
            - { name: kernel.event_subscriber }        
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
